{
	"openapi": "3.0.0",
	"info": {
		"title": "Reacher",
		"version": "0.10.0",
		"description": "### What is Reacher?\n\nReacher is a powerful, free and open-source email verification API service. It is provided both as a SaaS and as a self-host solution.",
		"license": {
			"name": "AGPL-3.0 OR Commercial",
			"url": "https://github.com/reacherhq/check-if-email-exists/blob/master/LICENSE.md"
		},
		"contact": {
			"name": "Reacher",
			"url": "https://reacher.email",
			"email": "amaury@reacher.email"
		},
		"termsOfService": "https://github.com/reacherhq/policies/blob/master/terms/index.fr.md"
	},
	"servers": [
		{
			"url": "https://api.reacher.email",
			"description": "Reacher Production"
		}
	],
	"paths": {
		"/v1/check_email": {
			"post": {
				"summary": "/v1/check_email",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"$ref": "#/components/schemas/CheckEmailOutput"
								}
							}
						}
					}
				},
				"operationId": "post-v1-check-email",
				"x-stoplight": {
					"id": "yho6jrv7p04qv"
				},
				"description": "Perform a full verification of an email address.\n\nThis endpoint replaces the previous `/v0/check_email` endpoint, but has the same input and output format. Contrarily to the `/v0/check_email` endpoint, the new `/v1/check_email` endpoint will add the email to verify to a queue, and the Reacher server will perform all verifications inside the queue according to its configuration's throttle, concurrency and other parameters.",
				"requestBody": {
					"description": "Request object containing all parameters necessary for an email verification.",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"$ref": "#/components/schemas/CheckEmailRequest"
							}
						}
					}
				}
			},
			"parameters": [],
			"servers": []
		},
		"/v1/bulk": {
			"post": {
				"summary": "/v1/bulk",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": ["job_id"],
									"properties": {
										"job_id": {
											"type": "integer",
											"x-stoplight": {
												"id": "614agdy9mxybk"
											},
											"description": "The unique ID generated for this bulk verification job. You must pass in this `job_id` to query the progress or results of this bulk verification."
										}
									}
								}
							}
						}
					}
				},
				"operationId": "post-v1-bulk",
				"x-stoplight": {
					"id": "jpoyy08arq31b"
				},
				"description": "Perform a bulk email verification.",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": ["input"],
								"properties": {
									"input": {
										"type": "array",
										"x-stoplight": {
											"id": "fsitj4yhkzk8e"
										},
										"description": "A list of emails to verify.",
										"items": {
											"x-stoplight": {
												"id": "kgcb3i4u5sfgr"
											},
											"type": "string"
										}
									},
									"webhook": {
										"$ref": "#/components/schemas/TaskWebhook"
									}
								}
							}
						}
					}
				}
			}
		},
		"/v1/bulk/{job_id}": {
			"parameters": [
				{
					"schema": {
						"type": "integer"
					},
					"name": "job_id",
					"in": "path",
					"required": true,
					"description": "The unique bulk verification job ID"
				}
			],
			"get": {
				"summary": "/v1/bulk/{job_id}",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": [
										"job_id",
										"created_at",
										"total_records",
										"total_processed",
										"summary",
										"job_status"
									],
									"properties": {
										"job_id": {
											"type": "integer",
											"x-stoplight": {
												"id": "4f6vqudy7zank"
											}
										},
										"created_at": {
											"type": "string",
											"x-stoplight": {
												"id": "7baymbmoaj5vo"
											},
											"format": "date-time",
											"description": "The date and time at which the bulk verification job was created."
										},
										"finished_at": {
											"type": "string",
											"x-stoplight": {
												"id": "7lhzxsb1ixnvz"
											},
											"format": "date-time",
											"description": "If the bulk verification job is finished, the date and time at which it was completed."
										},
										"total_records": {
											"type": "integer",
											"x-stoplight": {
												"id": "y8q2zhagq8zd6"
											},
											"description": "The number of emails to verify in the bulk verification job."
										},
										"total_processed": {
											"type": "integer",
											"x-stoplight": {
												"id": "oqxvsorhd06ch"
											},
											"description": "The number of emails that have been verified at the point of the query."
										},
										"summary": {
											"type": "object",
											"x-stoplight": {
												"id": "n5q382zces1lq"
											},
											"description": "A summary of already processed emails.",
											"required": [
												"total_safe",
												"total_invalid",
												"total_risky",
												"total_unknown"
											],
											"properties": {
												"total_safe": {
													"type": "integer",
													"x-stoplight": {
														"id": "4nss0vedcrjc4"
													},
													"description": "The number of emails where is_reachable is \"safe\"."
												},
												"total_invalid": {
													"type": "integer",
													"x-stoplight": {
														"id": "uzzk7ija2l5sv"
													},
													"description": "The number of emails where is_reachable is \"invalid\"."
												},
												"total_risky": {
													"type": "integer",
													"x-stoplight": {
														"id": "sqjtoggge6us3"
													},
													"description": "The number of emails where is_reachable is \"risky\"."
												},
												"total_unknown": {
													"type": "integer",
													"x-stoplight": {
														"id": "8lsodukakqreu"
													},
													"description": "The number of emails where is_reachable is \"unknown\"."
												}
											}
										},
										"job_status": {
											"x-stoplight": {
												"id": "tsw5sp5cxe7ad"
											},
											"enum": ["Running", "Completed"],
											"description": "Either \"Running\" or \"Completed\"."
										}
									}
								}
							}
						}
					}
				},
				"operationId": "get-v1-bulk",
				"x-stoplight": {
					"id": "phrhxrak01ja6"
				},
				"description": "See the progress of a bulk verification job."
			}
		},
		"/v1/bulk/{job_id}/results": {
			"parameters": [
				{
					"schema": {
						"type": "string"
					},
					"name": "job_id",
					"in": "path",
					"required": true,
					"description": "The unique bulk verification job ID"
				}
			],
			"get": {
				"summary": "Your GET endpoint",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"required": ["results"],
									"properties": {
										"results": {
											"$ref": "#/components/schemas/CheckEmailOutput"
										}
									}
								}
							}
						}
					}
				},
				"operationId": "get-v1-bulk-results",
				"x-stoplight": {
					"id": "skx9nlfib3but"
				},
				"description": "Get the results of a bulk verification job. This endpoint will error if the job is still running, please query `GET /v1/bulk/{job_id}` first to see the progress of the job.",
				"parameters": [
					{
						"schema": {
							"type": "integer",
							"default": 50
						},
						"in": "query",
						"name": "limit",
						"description": "The number of results to return."
					},
					{
						"schema": {
							"type": "integer"
						},
						"in": "query",
						"name": "offset",
						"description": "The offset from which we return the results, which is equivalent to the number of elements in the array to skip."
					}
				]
			}
		},
		"/v0/check_email": {
			"post": {
				"summary": "/v0/check_email",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CheckEmailOutput"
								},
								"examples": {}
							}
						}
					}
				},
				"operationId": "post-v0-check-email",
				"description": "**Sunset notice: please use `/v1/check_email` instead.** Both endpoints take the same input arguments and return the same output; only their inner implementation is different, see below.\n\nPerform a full verification of an email address.\n\nContrarily to the /v1/check_email endpoint, this endpoint will perform an email verification immediately, without taking into account the Reacher server's throttling, concurrency and other configurations. As such, this endpoint is slightly riskier than the /v1/check_email, as the Reacher server's IP reputation can be impacted if this endpoint is called too often.",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CheckEmailRequest"
							}
						}
					},
					"description": "Request object containing all parameters necessary for an email verification."
				},
				"parameters": [
					{
						"schema": {
							"type": "string"
						},
						"in": "header",
						"name": "Authorization",
						"description": "Your personal Reacher API key",
						"required": true
					}
				],
				"x-stoplight": {
					"id": "9cw3vilj3q88h"
				},
				"deprecated": true
			},
			"parameters": []
		}
	},
	"components": {
		"schemas": {
			"CheckEmailRequest": {
				"title": "CheckEmailRequest",
				"x-stoplight": {
					"id": "834398a8ce480"
				},
				"type": "object",
				"description": "A request object to perform an email verification. The `to_email` field is required, all other fields are optional.",
				"required": ["to_email"],
				"properties": {
					"from_email": {
						"type": "string",
						"description": "In the SMTP connection, the FROM email address."
					},
					"to_email": {
						"type": "string",
						"description": "The email address to check."
					},
					"hello_name": {
						"type": "string",
						"description": "In the SMTP connection, the EHLO hostname."
					},
					"proxy": {
						"$ref": "#/components/schemas/CheckEmailInputProxy"
					},
					"smtp_port": {
						"type": "number",
						"description": "SMTP port to use for email validation. Defaults to 25, but 465, 587 and 2525 are sometimes also used."
					},
					"yahoo_verif_method": {
						"$ref": "#/components/schemas/YahooVerifMethod"
					},
					"gmail_verif_method": {
						"$ref": "#/components/schemas/GmailVerifMethod"
					},
					"hotmail_verif_method": {
						"$ref": "#/components/schemas/HotmailVerifMethod"
					},
					"check_gravatar": {
						"type": "boolean",
						"description": "Whether to check if a gravatar image is existing for the given email."
					}
				}
			},
			"CheckEmailOutput": {
				"title": "CheckEmailOutput",
				"type": "object",
				"x-examples": {
					"Example with test@gmail.com": {
						"input": "test@gmail.com",
						"is_reachable": "invalid",
						"misc": {
							"is_disposable": false,
							"is_role_account": true
						},
						"mx": {
							"accepts_mail": true,
							"records": [
								"alt4.gmail-smtp-in.l.google.com.",
								"alt2.gmail-smtp-in.l.google.com.",
								"alt3.gmail-smtp-in.l.google.com.",
								"gmail-smtp-in.l.google.com.",
								"alt1.gmail-smtp-in.l.google.com."
							]
						},
						"smtp": {
							"can_connect_smtp": true,
							"has_full_inbox": false,
							"is_catch_all": false,
							"is_deliverable": false,
							"is_disabled": false
						},
						"syntax": {
							"domain": "gmail.com",
							"is_valid_syntax": true,
							"username": "test"
						}
					}
				},
				"description": "The verification result of an email.",
				"required": [
					"input",
					"is_reachable",
					"misc",
					"mx",
					"smtp",
					"syntax"
				],
				"properties": {
					"input": {
						"type": "string",
						"format": "email",
						"description": "The input email address."
					},
					"is_reachable": {
						"$ref": "#/components/schemas/Reachable"
					},
					"misc": {
						"oneOf": [
							{
								"$ref": "#/components/schemas/MiscDetails"
							},
							{
								"$ref": "#/components/schemas/CoreError"
							}
						],
						"description": "Miscellaneous information about the email account."
					},
					"mx": {
						"oneOf": [
							{
								"$ref": "#/components/schemas/MxDetails"
							},
							{
								"$ref": "#/components/schemas/CoreError"
							}
						],
						"description": "Information gathered from querying the MX records of the mail server."
					},
					"smtp": {
						"oneOf": [
							{
								"$ref": "#/components/schemas/SmtpDetails"
							},
							{
								"$ref": "#/components/schemas/CoreError"
							}
						],
						"description": "Verifications performed by connecting to the mail server via SMTP."
					},
					"syntax": {
						"$ref": "#/components/schemas/SyntaxDetails"
					},
					"debug": {
						"$ref": "#/components/schemas/DebugDetails"
					}
				}
			},
			"Reachable": {
				"type": "string",
				"title": "Reachable",
				"enum": ["invalid", "unknown", "safe", "risky"],
				"description": "An enum to describe how confident we are that the recipient address is real: `safe`, `risky`, `invalid` and `unknown`. Check our FAQ to know the meanings of the 4 possibilities: https://help.reacher.email/email-attributes-inside-json."
			},
			"MiscDetails": {
				"title": "MiscDetails",
				"type": "object",
				"description": "Miscellaneous information about the email account.",
				"properties": {
					"is_disposable": {
						"type": "boolean",
						"description": "Is the address provided by a known disposable email address provider?"
					},
					"is_role_account": {
						"type": "boolean",
						"description": "Is this email a role-based account?"
					},
					"gravatar_url": {
						"type": "string",
						"description": "URL to the email's Gravatar profile picture. It is only populated if check_gravatar is set to true in the request, and if the email has an associated Gravatar."
					}
				},
				"required": ["is_disposable", "is_role_account"]
			},
			"MxDetails": {
				"title": "MxDetails",
				"type": "object",
				"properties": {
					"accepts_mail": {
						"type": "boolean",
						"description": "Does the server accept mails?"
					},
					"records": {
						"type": "array",
						"description": "The list of FQDN (Fully Qualified Domain Names) of the mail server.",
						"items": {
							"type": "string"
						}
					}
				},
				"required": ["accepts_mail", "records"],
				"description": "Object holding the MX details of the mail server."
			},
			"SmtpDetails": {
				"title": "SmtpDetails",
				"type": "object",
				"description": "Verifications performed by connecting to the mail server via SMTP.",
				"properties": {
					"can_connect_smtp": {
						"type": "boolean",
						"description": "Can the mail exchanger of the email address domain be contacted successfully?"
					},
					"has_full_inbox": {
						"type": "boolean",
						"description": "Is the inbox of this mailbox full?"
					},
					"is_catch_all": {
						"type": "boolean",
						"description": "Is this email address a catch-all address?"
					},
					"is_deliverable": {
						"type": "boolean",
						"description": "Is an email sent to this address deliverable?"
					},
					"is_disabled": {
						"type": "boolean",
						"description": "Has this email address been disabled by the email provider?"
					}
				},
				"required": [
					"can_connect_smtp",
					"has_full_inbox",
					"is_catch_all",
					"is_deliverable",
					"is_disabled"
				]
			},
			"SyntaxDetails": {
				"title": "SyntaxDetails",
				"type": "object",
				"description": "Syntax validation of an email address.",
				"properties": {
					"domain": {
						"type": "string",
						"description": "The domain name of the email, i.e. the part after the \"@\" symbol."
					},
					"is_valid_syntax": {
						"type": "boolean",
						"description": "Is the address syntactically valid?"
					},
					"username": {
						"type": "string",
						"description": "The username of the email, i.e. the part before the \"@\" symbol."
					}
				},
				"required": ["domain", "is_valid_syntax", "username"]
			},
			"CoreError": {
				"title": "CoreError",
				"x-stoplight": {
					"id": "a872ead6474cd"
				},
				"type": "object",
				"description": "Object describing an error happening during the misc, MX, or SMTP verifications.",
				"properties": {
					"type": {
						"type": "string",
						"description": "An error type."
					},
					"message": {
						"type": "string",
						"description": "A human-readable description of the error."
					}
				},
				"required": ["type", "message"]
			},
			"YahooVerifMethod": {
				"type": "string",
				"title": "YahooVerifMethod",
				"enum": ["Api", "Headless", "Smtp"],
				"description": "An enum to describe how we verify Yahoo emails."
			},
			"HotmailVerifMethod": {
				"type": "string",
				"x-stoplight": {
					"id": "ntdugsleyotut"
				},
				"title": "HotmailVerifMethod",
				"enum": ["Api", "Headless", "Smtp"],
				"description": "An enum to describe how we verify Hotmail emails."
			},
			"GmailVerifMethod": {
				"type": "string",
				"x-stoplight": {
					"id": "xo5r48yhtxiwr"
				},
				"title": "GmailVerifMethod",
				"enum": ["Api", "Smtp"],
				"description": "An enum to describe how we verify Gmail emails.",
				"x-internal": false
			},
			"CheckEmailInputProxy": {
				"title": "CheckEmailInputProxy",
				"type": "object",
				"x-examples": {
					"example-1": {
						"value": {
							"host": "my-proxy.io",
							"port": 1080
						}
					}
				},
				"properties": {
					"host": {
						"type": "string",
						"description": "The proxy host."
					},
					"port": {
						"type": "integer",
						"description": "The proxy port."
					},
					"username": {
						"type": "string",
						"description": "Username to pass to proxy authentication."
					},
					"password": {
						"type": "string",
						"description": "Password to pass to proxy authentication."
					}
				},
				"required": ["host", "port"],
				"description": "Proxy information for email verification."
			},
			"DebugDetails": {
				"title": "DebugDetails",
				"x-stoplight": {
					"id": "4wxlk39h8v9kz"
				},
				"type": "object",
				"properties": {
					"start_time": {
						"type": "string",
						"x-stoplight": {
							"id": "60i65k60m8e8d"
						},
						"description": "The time when the email verification started."
					},
					"end_time": {
						"type": "string",
						"x-stoplight": {
							"id": "zw4ccbvwsoh6q"
						},
						"description": "The time when the email verification ended."
					},
					"duration": {
						"$ref": "#/components/schemas/Duration"
					},
					"server_name": {
						"type": "string",
						"x-stoplight": {
							"id": "2jrbdecvqh4t5"
						},
						"description": "The name of the server that performed the email verification."
					},
					"smtp": {
						"$ref": "#/components/schemas/DebugDetailsSmtp"
					}
				},
				"required": [
					"start_time",
					"end_time",
					"duration",
					"server_name",
					"smtp"
				]
			},
			"Duration": {
				"title": "Duration",
				"x-stoplight": {
					"id": "bg9y0iez4zati"
				},
				"type": "object",
				"description": "An object representing a duration (seconds + nanoseconds).",
				"properties": {
					"secs": {
						"type": "number",
						"description": "Seconds"
					},
					"nanos": {
						"type": "number",
						"description": "Nanoseconds"
					}
				},
				"required": ["secs", "nanos"]
			},
			"DebugDetailsSmtp": {
				"title": "DebugDetailsSmtp",
				"x-stoplight": {
					"id": "2a90bzapppo0j"
				},
				"type": "object",
				"properties": {
					"verif_method": {
						"$ref": "#/components/schemas/VerifMethod"
					}
				},
				"description": "Smtp details used for debugging, such as which method is used."
			},
			"VerifMethod": {
				"title": "VerifMethod",
				"x-stoplight": {
					"id": "9xw9e1jwti230"
				},
				"type": "object",
				"description": "The verification method used for the email.",
				"required": ["type"],
				"properties": {
					"type": {
						"x-stoplight": {
							"id": "4ogsz639tcdb6"
						},
						"enum": ["Smtp", "Headless", "Api", "Skipped"],
						"description": "The method used to perform the email verification"
					}
				}
			},
			"TaskWebhook": {
				"title": "TaskWebhook",
				"x-stoplight": {
					"id": "6053d3ngu2hfn"
				},
				"type": "object",
				"description": "Optional webhook configuration to send email verification results to for bulk email verification.",
				"properties": {
					"on_each_email": {
						"$ref": "#/components/schemas/Webhook"
					}
				}
			},
			"Webhook": {
				"title": "Webhook",
				"x-stoplight": {
					"id": "p9emghvcb92fj"
				},
				"type": "object",
				"description": "If a webhook is set, Reacher will send the email verification result to the specified webhook. The method will be POST, and the body will containt the email verification response.",
				"required": ["url"],
				"properties": {
					"url": {
						"type": "string",
						"x-stoplight": {
							"id": "iraaa1ism4bzi"
						},
						"description": "The URL to send the email verification result to."
					},
					"extra": {
						"type": "object",
						"x-stoplight": {
							"id": "f20boz81d2fei"
						}
					}
				}
			}
		},
		"securitySchemes": {
			"Authorization": {
				"name": "Authorization",
				"type": "apiKey",
				"in": "header",
				"description": "A Reacher API key is required for all requests. Sign up on https://reacher.email to get your personal API key."
			}
		},
		"requestBodies": {}
	},
	"security": [
		{
			"Authorization": []
		}
	]
}
